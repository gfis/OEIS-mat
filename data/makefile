#!make

# OEIS-mat/data - extraction from repositories
# @(#) $Id$
# 2023-06-17: compile-internal
# 2023-05-02: Georg Fischer
#
# from https://github.com/oeis/oeisdata        - sequence in internal format and b-files
#  and https://github.com/archmageirvine/joeis - Java programs
#---------------------------------
GITS=../..
COMMON=../common
DBAT=java -jar $(GITS)/dbat/dist/dbat-lite.jar -e UTF-8 -c worddb
HERE=../OEIS-mat/data
JOEIS=$(GITS)/joeis
FISCHER=$(GITS)/joeis-lite/internal/fischer
OEISDATA=$(GITS)/oeisdata
REM=set_environment_variable_REMOTE_to_g@a
REMDIR=$(REM):~/work/gits/OEIS-mat/data
SLEEP=8
D=0
#-------------
all: remote
help:
	grep -E "^[a-z]" makefile
#==============================
# the following are to be used on the remote server
#----
# Download stripped.gz, names.gz, bfilelist.gz
oprep_down: oprep1 oprep2 oprep3 oprep_pack
oprep1:
	rm -f stripped*
	wget https://oeis.org/stripped.gz
	gzip -df  stripped.gz
	cp -pv    stripped  $(COMMON)
	sleep $(SLEEP)
oprep2:
	rm -f names*
	wget https://oeis.org/names.gz
	gzip -df  names.gz
	cp -pv    names     $(COMMON)
	sleep $(SLEEP)
oprep3:
	rm -f bfilelist*
	wget https://oeis.org/bfilelist.gz
	gzip -df  bfilelist.gz
	cp -pv    bfilelist $(COMMON)
oprep_pack:
	tar -czvf $@.tgz stripped names bfilelist
	ls -al
#----
catex_down: oeisdata_pull cat28 tinfo catex_pack
tinfo_down:                     tinfo catex_pack
#--
oeisdata_pull: # update the OEIS git repository
	cd $(OEISDATA) ; git pull
cat28: # reassemble the cat25.txt file
	cd $(OEISDATA) ; find seq -type f | sort > $(HERE)/$@.list.tmp
	rm -f    $@.txt
	cd $(OEISDATA) ; cat $(HERE)/$@.list.tmp | xargs -innn cat nnn >> $(HERE)/$@.txt
	head -n2 $@.txt
	wc -l    $@.txt
	ls -al   *$@.*
tinfo: # extract ASINFO, ASNAME, BFINFO database tables
	perl -w catex_info.pl -d $(D) cat28.txt
	ls -al   ??????.txt
	wc -l    ??????.txt
	tail -n2 ??????.txt
catex_pack:
	tar -czvf $@.tgz asdata.txt asinfo.txt asname.txt bfinfo.txt
	ls -al *.tgz
#====
joeis_down: joeis_pull joeis_list1 joeis_list2 joeis_ofpre joeis_coral joeis_ofter jcat28 joeis_pack
#--
joeis_pull:	# update Sean's jOEIS repository
	cd $(JOEIS) ; git pull | tee joeis_pull.`date +%Y-%m-%d.%H.%M`.txt
#--
# get the A-numbers and used superclasses of all implemented sequences
joeis_list1:
	find $(JOEIS)/src/irvine/oeis -iname "A??????.java" \
	| xargs -l grep -HP "( extends | implements |\@author|^\/\/ Generated by )" \
	>        $@.all.tmp || :
	head -n2 $@.all.tmp 
	wc -l    $@.all.tmp 
joeis_list2:
	grep -E  "public class *A" joeis_list1.all.tmp \
	| sed -e "s/[a-zA0-9\.\/]*://" \
	| sed -e "s/public class *A/A/" \
	      -e "s/ extends / /" \
	      -e "s/ implements / /" \
	      -e "s/ *[^A-Za-z0-9 ].*//" \
	      -e "s/ /\t/" \
	| sort \
	| grep -E "^A" \
	>        joeis_list.txt
	head -n2 joeis_list.txt
	wc -l    joeis_list.txt
#--
joeis_ofpre: # build a preliminary ofter file (with offset = terms = 0) for jcat25.pl
	grep -E "^A" joeis_list.txt | cut -b1-7 | sed -e "s/$$/\t0\t0,0,0,0,0,0,0,0$$/" \
	>        $@.txt
	head -n2 $@.txt
	wc -l    $@.txt
#--
joeis_coral: # get the A-numbers with "... implements Conjectural"
	grep -iE "Conjectural" joeis_list.txt \
	| cut -b1-7 \
	| sort > $@.txt
	head -n2 $@.txt
	wc -l    $@.txt
#--
joeis_ofter: # A-numbers implemented in jOEIS, offsets and a few terms, reduced by the A-numbers in joeis_coral
	perl delete_coral.pl -f joeis_coral.txt joeis_ofpre.txt \
	>        $@.txt
	head -n2 $@.txt
	wc -l    joeis*.txt
	cp -pv   $@.txt ../common
#--
jcat28: # qualify the cat28 lines with "#" = implemented in jOEIS, "%" = nyi, "?" = conjectured
	perl jcat28.pl -f joeis_ofpre.txt cat28.txt > $@.txt
	cut -b1 $@.txt | sort | uniq -c
	cp -pv    $@.txt ../common/jcat25.txt
#--
joeis_pack:
	tar -czvf $@.tgz jcat28.txt joeis_list1.all.tmp joeis_list.txt joeis_ofter.txt joeis_coral.txt
	ls -al   *.tgz
#========
# to be used locally:
#
remote: joeis_pull jar_remote catex_remote oprep_remote joeis_remote load4 reflect
load4:
	cd ../common ; make asdata_load asinfo_load asname_load bfinfo_load joeis_reload
reflect:
	cd $(FISCHER)/reflect ; make
#====
oprep_remote: # download stripped, names, bfilelist
	ssh $(REM)           "cd ~/work/gits/OEIS-mat/data ; make oprep_down"
	scp               $(REM):~/work/gits/OEIS-mat/data/oprep_pack.tgz .
	tar -xzvf                                             oprep_pack.tgz
	ls -al
	tail -n2 stripped names bfilelist
	mv -v    stripped names bfilelist ../common/
#====
catex_remote: # refresh oeisdata, generate cat28 and db table content and download
	ssh $(REM)           "cd ~/work/gits/OEIS-mat/data ; git stash ; git pull"
	scp makefile *.pl $(REM):~/work/gits/OEIS-mat/data/
	ssh $(REM)           "cd ~/work/gits/OEIS-mat/data ; make catex_down"
	scp               $(REM):~/work/gits/OEIS-mat/data/catex_pack.tgz .
	tar -xzvf                                             catex_pack.tgz
	ls -al
	tail -n2 asdata.txt asinfo.txt asname.txt bfinfo.txt
	mv -v    asdata.txt asinfo.txt asname.txt bfinfo.txt ../common/
tinfo_remote: # refresh generate db table content and download
	ssh $(REM)           "cd ~/work/gits/OEIS-mat/data ; git stash ; git pull"
	scp makefile *.pl $(REM):~/work/gits/OEIS-mat/data/
	ssh $(REM)           "cd ~/work/gits/OEIS-mat/data ; make tinfo_down"
	scp               $(REM):~/work/gits/OEIS-mat/data/catex_pack.tgz .
	tar -xzvf                                             catex_pack.tgz
	ls -al
	tail -n2 asdata.txt asinfo.txt asname.txt bfinfo.txt
	mv -v    asdata.txt asinfo.txt asname.txt bfinfo.txt ../common/
#====
joeis_remote: # update jOEIS repository, produce lists and jcat28, pack them and download
	ssh $(REM)           "cd ~/work/gits/OEIS-mat/data ; git stash ; git pull"
	scp makefile *.pl $(REM):~/work/gits/OEIS-mat/data/
	ssh $(REM)           "cd ~/work/gits/OEIS-mat/data ; make joeis_down"
	scp               $(REM):~/work/gits/OEIS-mat/data/joeis_pack.tgz .
	tar -xzvf                                             joeis_pack.tgz
	ls -al
	tail -n2 jcat28.txt joeis_list1.all.tmp joeis_list.txt joeis_ofter.txt joeis_coral.txt
	cp -pv   jcat28.txt ../common/jcat25.txt
	cp -pv   joeis_list1.all.tmp joeis_list.txt joeis_ofter.txt joeis_coral.txt ../common/
#====
jar_remote: # refresh jOEIS and rebuild the joeis.jar; needs > 8 GB RAM
	ssh $(REM) "cd ~/work/gits/joeis ; git pull ; ant clean all-jar"
	scp $(REM):~/work/gits/joeis/build.tmp/joeis.jar $(JOEIS)/build.tmp/joeis.jar 
#========
jar_push: # REM= ; distribute the local joeis.jar to some remote server
	scp $(JOEIS)/build.tmp/joeis.jar $(REM):work/gits/joeis/build.tmp/joeis.jar
#====
joeis-prep: # REM= ; make a fresh copy of joeis on the remote server
	ssh $(REM) "cd  ~/work/gits/joeis-prep ; rm -rf * ; cp -pr ../joeis/* . ; rm -f joeis_pull* *.log ; ant clean ; ls -al"
xxx:
	ssh $(REM) "cd ~/work/gits/joeis ; git pull ; cd ~/work/gits/OEIS-mat/data/
#====
bfsynth: bfsynth1 bfsynth2 bfsynth3 # generate all "synthesized" b-files from asdata
bfsynth1:
	$(DBAT) -x "SELECT d.aseqno, ',' || d.data || ',' FROM asdata d, bfinfo b WHERE d.aseqno = b.aseqno AND b.message LIKE '%synth%' \
	  ORDER BY 1" \
	>        $@.tmp
	tail -n2 $@.tmp
bfsynth2:
	$(DBAT) -x "SELECT i.aseqno, i.offset1            FROM asinfo i, bfinfo b WHERE i.aseqno = b.aseqno AND b.message LIKE '%synth%' \
	  ORDER BY 1" \
	>        $@.tmp
	tail -n2 $@.tmp
	wc -l    bfsynth*.tmp
bfsynth3:
	perl $(COMMON)/bfsynth.pl -s bfsynth1.tmp -p 3 -o $(COMMON)/bfile bfsynth2.tmp
