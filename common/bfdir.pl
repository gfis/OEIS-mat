#!perl

# Parse file 'bfilelsit', and generate .tsv or CREATE SQL
# @(#) $Id$
# 2019-01-29, Georg Fischer: copied from extract_info.pl
#
#:# usage:
#:#     perl bfdir.pl {-c | -r infile1 infile2 ...} > outfile
#---------------------------------
use strict;
use integer;
my ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday) = gmtime (time);
$mon  += 1;
$year += 1900;
my $utc_stamp = sprintf ("%04d-%02d-%02dT%02d:%02d:%02d\z"
        , $year, $mon, $mday, $hour, $min, $sec);

# get options
my $action     = "-r"; # generate TSV for Dbat -r
my $debug      =  0; # 0 (none), 1 (some), 2 (more)
my $tabname    = "bfdir";
if (scalar(@ARGV) == 0) {
    print `grep -E "^#:#" $0 | cut -b3-`;
    exit;
}
while (scalar(@ARGV) > 0 and ($ARGV[0] =~ m{\A\-})) {
    my $opt = shift(@ARGV);
    if (0) {
    } elsif ($opt =~ m{\-d}) {
        $debug    = shift(@ARGV);
    } elsif ($opt =~ m{\-t}) {
        $tabname  = shift(@ARGV);
    } elsif ($opt =~ m{\-}) {
        $action   = $opt;
    } else {
        die "invalid option \"$opt\"\n";
    }
} # while ARGV
my $access = "1900-01-01 00:00:00"; # modification timestamp from the file
my $filesize = 0; # file size in bytes from the operating system
my %months = qw(
    jan 01
    feb 02
    mar 03
    apr 04
    may 05
    jun 06
    jul 07
    aug 08
    sep 09
    oct 10
    nov 11
    dec 12
    );
#----------------------------------------------
if (0) {
#--------------------------
} elsif ($action =~ m{c}) {
    &print_create_sql();
#--------------------------
} elsif ($action =~ m{r}) {
    while (<>) {
        if (m{\sb(\d{6})\.txt}) {
            my $seqno = $1;
            s/\s+\Z//; # chompr
            my $line = $_;
            my @fields = split;
            my ($prot, $d1, $group, $owner, $filesize, $monthname, $day, $year_time, $bfname);
            if ($line =~ m{\A\-}) {
                # -rw-rw-r-- 1 oeisprod oeis    14021 Feb  8  2018 b000001.txt
                # -rw-r--r-- 1 oeisprod oeis   517991 Sep 25 05:47 b009191.txt
                # 0          1 2        3       4     5    6  7    8
                ($prot, $d1, $group, $owner, $filesize, $monthname, $day, $year_time, $bfname) = split(/\s+/, $line);
            } else {
                #  201230 Feb  8  2018 b000009.txt
                # 1167322 Feb  8  2018 b000010.txt
                # 1682839 Feb  8  2018 b000011.txt
                $line =~ s{\A\s+}{}; # remove leading whitespace
                ($filesize, $monthname, $day, $year_time, $bfname) = split(/\s+/, $line);
            }
            my $aseqno   = "A$seqno";
            my $monthnum = $months{lc($monthname)};
            my $fileyear = $year - ($monthnum > $mon ? 1 : 0);
            my $hour_min = "00:00";
            if ($year_time =~ m{\:}) {
                $hour_min = $year_time;
            } else {
                $fileyear = $year_time;
            }
            my $created = sprintf("%04d-%02d-%02d %s:00-00:00", $fileyear, $monthnum, $day, $hour_min);
            print join("\t", ($aseqno, &get_utc_timestamp($created), $filesize)) . "\n";
        } # no comment
    } # while <>
#--------------------------
} else {
    die "invalid action \"$action\"\n";
} # actions

#-----------------------
sub print_create_sql  {
    print <<"GFis";
--  Table for OEIS - directory listing of b-files
--  @(#) \$Id\$
--  $utc_stamp: Georg Fischer - generated by bfdir.pl $action, do not edit here!
--
DROP    TABLE  IF EXISTS $tabname;
CREATE  TABLE            $tabname
    ( aseqno    VARCHAR(10)   -- A322469
    , created   TIMESTAMP     -- creation time in UTC
    , filesize  BIGINT        -- number of bytes
    , PRIMARY KEY(aseqno)
    );
COMMIT;
GFis
} # print_create_sql
#----
sub get_utc_timestamp { # keep in sync with code in extract_from_bfile !!!
    my ($value) = @_;
#   2011-11-13T12:40:47-05:00
    $value =~ m{\A(\d+)\D(\d+)\D(\d+)\D(\d+)\D(\d+)(\D)(\d+)\D(\d+)\D(\d+)};
    my (          $year, $month,$day,  $hour, $min,$sec,$tzsign,$tzhour,$tzmin)
        = (       $1,    $2,    $3,    $4,    $5,  $6,  $7,     $8,     $9);
    if ($tzsign == "+") { # subtract; for example 12:00:00+01:00 in Berlin is 12:00:00+00&nbsp;:00 in London (GMT)
        $min -= $tzmin;
        if ($min < 0) {
            $min += 60;
            $hour --;
        }
        $hour -= $tzhour;
        if ($hour < 0) {
            $hour += 24;
            $day --;
            if ($day < 1) {
                $month --;
                if ($month < 1) {
                    $year --;
                    $month = 12;
                    $day   = 31;
                } else {  #    Jan               Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec
                    $day = ("", 31, &feb_last($year), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)[$month];
                }
            } # day < 0
        } # hour < 0
    } else { # "-" add
        $min += $tzmin;
        if ($min > 60) {
            $min -= 60;
            $hour ++;
        }
        $hour += $tzhour;
        if ($hour > 24) {
            $hour -= 24;
            $day ++; #         Jan               Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec
            if ($day >     ("", 31, &feb_last($year), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)[$month]) {
                $month ++;
                if ($month > 12) {
                    $year ++;
                    $month = 1;
                    $day   = 12;
                } else {
                    $day = 1;
                }
            } # day < 0
        } # hour < 0
    } # add
    if ($year < 1970) {
        # OEIS server sometimes sets "0000"
        # MariaDB does not accept timestamps < "1970-01-01 01:01:01"
        $year = 1974;
    }
    return sprintf ("%04d-%02d-%02d %02d:%02d:%02d"
        , $year, $month, $day, $hour, $min, $sec);
} # get_utc_timestamp
#----
sub feb_last {
    my ($year) = @_;
    my $result = 28;
    return $result;
} # feb_last
#---------------------------
#------------------------------------
__DATA__
This is first of 4 files that list all the
b-files on the server as of 19:45 (New York time), Jan 07, 2019
There were a total of 146988 b-files.

-rw-rw-r-- 1 oeisprod oeis    14021 Feb  8  2018 b000001.txt
-rwxrwxr-x 1 oeisprod oeis    72919 Feb  8  2018 b000002.txt
-rw-rw-r-- 1 oeisprod oeis   172567 Feb 25  2018 b000003.txt
-rwxrwxr-x 1 oeisprod oeis     5906 Feb  8  2018 b000004.txt
-rwxrwxr-x 1 oeisprod oeis   828028 Feb  8  2018 b000005.txt
-rwxrwxr-x 1 oeisprod oeis    87648 Feb  8  2018 b000006.txt
-rwxrwxr-x 1 oeisprod oeis     5905 Feb  8  2018 b000007.txt
-rw-rw-r-- 1 oeisprod oeis   143258 Feb  8  2018 b000008.txt
-rw-rw-r-- 1 oeisprod oeis   201230 Feb  8  2018 b000009.txt
-rwxrwxr-x 1 oeisprod oeis  1167322 Feb  8  2018 b000010.txt
-rw-rw-r-- 1 oeisprod oeis  1682839 Feb  8  2018 b000011.txt
-rw-rw-r-- 1 oeisprod oeis    68898 Feb  8  2018 b000012.txt
-rw-rw-r-- 1 oeisprod oeis  1682834 Feb  8  2018 b000013.txt
-rwxrwxr-x 1 oeisprod oeis    42375 Feb  8  2018 b000014.txt
-rwxrwxr-x 1 oeisprod oeis    97826 Feb  8  2018 b000015.txt
-rw-rw-r-- 1 oeisprod oeis  1682834 Feb  8  2018 b000016.txt
-rwxrwxr-x 1 oeisprod oeis    16797 Feb  8  2018 b000019.txt
