#!perl

# Extract recurrences from tabl.tmp
# @(#) $Id$
# 2021-10-31, Georg Fischer
#
#:# Usage:
#:#   perl trirecur.pl [-d debug] tabl.tmp > outfile
#--------------------------------------------------------
use strict;
use integer;
use warnings;
my ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime (time);
my $timestamp = sprintf ("%04d-%02d-%02d %02d:%02d", $year + 1900, $mon + 1, $mday, $hour, $min);
print "# generated by trirec/trirecur.pl at $timestamp\n";

my $debug = 0;
my $mode = "r"; # row sums
my $callcode = "trirecur";
while (scalar(@ARGV) > 0 and ($ARGV[0] =~ m{\A[\-\+]})) {
    my $opt = shift(@ARGV);
    if (0) {
    } elsif ($opt   =~ m{d}) {
        $debug      = shift(@ARGV);
    } else {
        die "invalid option \"$opt\"\n";
    }
} # while $opt

# while (<DATA>) {
while (<>) {
    s/\s+\Z//; # chompr
    my ($aseqno, $callcode, $offset, $name, @rest) = split(/\t/, $_);
    next if $name =~ m{sum|product|denominator|numerator}i;
    $name =~ s{Triangle +}{};
    $name =~ s{T[^\(]}{};
    $name =~ s{\,? *read by rows\,?}{};
    my $pos = index($name, "T");
    if ($pos >= 0) {
        $name = substr($name, $pos);
        if ($name =~ s{\A([Tt]\(\w\, *\w\)) *\= ([^\.]*)\.?}{$1}) { # starts with "T(a,b)="
            my ($telem, $texpr) = ($1, $2);
            $telem =~ s{ }{}g;
            $name = "$telem=$texpr";
            if ($name !~ m{number}) {
                print join("\t", $aseqno, $callcode, $offset, $name) . "\n";
            } # ! "number"
        } # contains T(
    }
} # while <>
#--------------------------------------------
__DATA__
