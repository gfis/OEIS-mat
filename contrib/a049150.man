CoefficientList[1/x*InverseSeries[Series[x*(2*(1+x^2)-1/(1-x)),{x,0,16}],x],x]
A049150		Recip transform of 2*(1 + x^2)-1/(1-x).
1, 1, 1, 1, 3, 15, 59, 187, 533, 1541, 4893, 16797, 58663, 201347, 679767, 2294967, 7850121, 27247369, 95375225, 334643225, 1174649611, 4129971863, 14570334995, 51610458291, 183436895645, 653582527693, 2333035219285, 8342630973365

A049171		Revert transform of 2*(1 + x + x^2)-1/(1-x).		2
1, 1, 3, 9, 33, 125, 503, 2081, 8849, 38345, 168875, 753401, 3398177, 15469493, 70984559, 327982529, 1524644897, 7125440913, 33459931155, 157794990633, 747021246817, 3548843286829, 16912921740775, 80836929471329, 387397148131889, 1861088017162457

A049184		Revert transform of -2(1-x+x^2+x^4-x^5-x^7)+1+1/(1+x).		0
1, 1, 3, 11, 43, 181, 797, 3623, 16883, 80211, 387069, 1891993, 9348037, 46611111, 234246003, 1185284981, 6033612461, 30877015405, 158761428015, 819773798543, 4249143243487, 22100975481441, 115316005733921, 603418314889419 (list; graph; refs; listen; history; edit; text; internal format)
OFFSET	
1,3
COMMENTS	
Sign diagram of generating sequence: +---++++-+-+-+-+-+-+...
(PARI) a(n)=if(n<1, 0, polcoeff(serreverse(x*(1-2*x^2*(1+x-x^3-x^4-x^5)+O(x^n))/(1+x)), n))

for(n=1,16,print1(polcoeff(serreverse( x*(1-2*x^2*(1+x-x^3-x^4-x^5)+O(x^n))/(1+x) ), n),","))
for(n=1,16,print1(polcoeff(( x*(1-2*x^2*(1+x-x^3-x^4-x^5)+O(x^n))/(1+x) ), n),","))


A049183		Revert transform of 2*(1 + x + x^2 + x^4 + x^7)-1/(1-x).		0
1, 1, 3, 11, 45, 195, 885, 4151, 19963, 97899, 487717, 2461393, 12557439, 64657461, 335562499, 1753538133
for(n=0,16,print1(polcoeff(serreverse((2*x^8 + 2*x^7 + 2*x^6 - 2*x^4 - 2*x^3 + x - 1+O(x^n))/(1+x) ), n),","))

for(n=1,16,print1(polcoeff(serreverse( x*(1-2*x^2*(1+x-x^3-x^4-x^5))/(1+x) ), n),","))

A049150
CoefficientList[1/x*InverseSeries[Series[x*(2*(1+x^2)-1/(1-x)),{x,0,16}],x],x]

A049171
seq(coeff(series( 2*(1 + x + x^2)-1/(1-x), x, n+1), x, n), n = 0..16);


A049125:
1, 1, 2, 4, 10, 25, 68, 187, 534, 1544, 4554, 13576, 40968, 124681
a[1] = 1; a[n_] := SeriesCoefficient[InverseSeries[x(1+x-x^2)/(1+x)^2 + x O[x]^n, x], {x, 0, n}];
Array[a, 28]

x="A049171"; REVERT([1,1,3,9,33,125,503,2081,8849,38345,168875,753401,3398177,15469493,70984559,327982529,1524644897,7125440913,33459931155,157794990633,747021246817,3548843286829,16912921740775,80836929471329,387397148131889,1861088017162457]);
x="A049172"; REVERT([1,1,3,11,45,195,887,4169,20093,98757,493123,2494491,12756393,65838591,342513423,1794185745,9455438585,50097517625,266696171475,1425833490011,7652256085781,41211824095067,222653745911847                                    ]);
x="A049173"; REVERT([1,1,1,1,3,13,43,113,273,725,2245,7305,22875,68545,204247,626177,1977377,6301577,19965657,62913409,198797059,633412869,2032810979,6543426769,21071181585,67905492605,219347606365,710732629705                                ]);
x="A049174"; REVERT([1,1,3,9,31,111,415,1589,6209,24617,98755,399853,1631223,6695623,27622559,114432337,475698713,1983128001,8286708835,34692334537,145457648071,610578202095,2565147448607,10782647145589,45338223018217                         ]);
x="A049175"; REVERT([1,1,3,11,43,181,799,3641,17013,81069,392427,1924363,9539431,47726001,240671423,1222026809,6242470529,32058889049,165425745315,857247711523,4459393489451,23278491380285,121901175460639,640201825131969                      ]);
x="A049176"; REVERT([1,1,3,9,33,127,519,2189,9489,41953,188531,858441,3952133,18365543,86031567,405819137,1925991665,9189984561,44061194915,212159132049,1025525299369,4974525125023,24206966311287,118138984314029                               ]);
x="A049177"; REVERT([1,1,3,11,45,197,903,4277,20773,102893,517771,2639571,13603509,70758321,370979823,1958471433,10401832121,55542275273,297991827555,1605599352347,8684388729741,47136082628653,256651601838839                                  ]);
x="A049178"; REVERT([1,1,1,1,3,15,59,185,513,1429,4429,15157,53063,181075,601335,1986857,6668441,22844345,79190777,274979521,952675283,3299619927,11466715411,40054475169,140536413497,494404614557,1741798930389,6144137237061                   ]);
x="A049179"; REVERT([1,1,3,9,31,113,431,1697,6849,28181,117787,498705,2134499,9220393,40146495,176011777,776363417,3442818809,15340344035,68645684937,308365373183,1390064360561,6286153799119,28510001658689                                     ]);
x="A049180"; REVERT([1,1,3,11,43,183,815,3749,17693,85161,416451,2063255,10334187,52241811,266203487,1365869249,7050739841,36591914977,190811893315,999264296139,5253232501219,27713207861343,146664411527631,778434156770069                     ]);
x="A049181"; REVERT([1,1,1,1,1,1,3,17,73,241,661,1585,3461,7285,16231,41921,124577,389233,1186617,3423201,9327801,24355849,62489483,162336209,437155705,1226390417,3534342301,10244919841,29383388701,82792942045                                 ]);
x="A049182"; REVERT([1,1,3,9,33,125,501,2063,8719,37531,164093,726491,3250743,14676923,66780835,305908709,1409609741,6529455069,30386379215,142002499261,666116180157,3135363209281,14803932109737,70097438174979                                 ]);
x="A049183"; REVERT([1,1,3,11,45,195,885,4151,19963,97899,487717,2461393,12557439,64657461,335562499,1753538133,9218852525,48725353661,258759350495,1380021781719,7388261669161,39692491630271,213918652593929                                    ]);
x="A049184"; REVERT([1,1,3,11,43,181,797,3623,16883,80211,387069,1891993,9348037,46611111,234246003,1185284981,6033612461,30877015405,158761428015,819773798543,4249143243487,22100975481441,115316005733921,603418314889419                      ]);
x="A049185"; REVERT([1,1,3,9,33,127,517,2171,9359,41139,183749,831479,3803859,17563853,81747331,383116181,1806427061,8563227837,40787427055,195106310221,936890791253,4514624943827,21823938003449,105804610564879                                ]);
x="A049186"; REVERT([1,1,3,11,45,197,901,4259,20643,102035,512365,2606421,13403715,69568071,363946211,1917148173,10160087333,54132552109,289790960735,1557980372127,8408281616305,45536927325809,247397689058521                                  ]);
x="A049187"; REVERT([1,1,1,1,3,15,57,167,423,1099,3391,11855,41149,134185,418859,1313861,4285349,14456605,49097477,164889821,548126215,1824046555,6131204373,20817947419,70988707243,241907381783,823235370195,2804366824235                      ]);
x="A049188"; REVERT([1,1,3,9,31,113,429,1679,6719,27367,113053,472471,1993785,8483023,36348595,156705421,679218965,2957961685,12936141935,56787742645,250137441355,1105189823717,4896749876081,21751355833739                                     ]);
x="A049189"; REVERT([1,1,3,11,43,183,813,3731,17563,84303,411093,2030833,10141953,51117801,259695379,1328454221,6836777765,35373248213,183892104895,960066929119,5031617143079,26462109374051,139609962072913,738695107457919                     ]);

#                                         ##### ##### ##### ##### #####
A049171	parm3	0	A049150	new long[] { [+1,-1,-1,+1,-1,+1,-1,+1,-1,+1 }	new long[] { -1,+1 }
A049172	parm3	0	A049150	new long[] { [+1,-1,-1,-1,-1,+1,-1,+1,-1,+1 }	new long[] { -1,+1 }
A049173	parm3	0	A049150	new long[] { [+1,-1,+1,-1,-1,+1,-1,+1,-1,+1 }	new long[] { -1,+1 }
A049174	parm3	0	A049150	new long[] { [+1,-1,-1,+1,+1,+1,-1,+1,-1,+1 }	new long[] { -1,+1 }
A049175	parm3	0	A049150	new long[] { [+1,-1,-1,-1,+1,+1,-1,+1,-1,+1 }	new long[] { -1,+1 }
A049176	parm3	0	A049150	new long[] { [+1,-1,-1,+1,-1,-1,-1,+1,-1,+1 }	new long[] { -1,+1 }
A049177	parm3	0	A049150	new long[] { [+1,-1,-1,-1,-1,-1,-1,+1,-1,+1 }	new long[] { -1,+1 }
A049178	parm3	0	A049150	new long[] { [+1,-1,+1,-1,-1,-1,-1,+1,-1,+1 }	new long[] { -1,+1 }
A049179	parm3	0	A049150	new long[] { [+1,-1,-1,+1,+1,-1,-1,+1,-1,+1 }	new long[] { -1,+1 }
A049180	parm3	0	A049150	new long[] { [+1,-1,-1,-1,+1,-1,-1,+1,-1,+1 }	new long[] { -1,+1 }
A049181	parm3	0	A049150	new long[] { [+1,-1,+1,-1,+1,-1,-1,+1,-1,+1 }	new long[] { -1,+1 }
A049182	parm3	0	A049150	new long[] { [+1,-1,-1,+1,-1,+1,+1,+1,-1,+1 }	new long[] { -1,+1 }
A049183	parm3	0	A049150	new long[] { [+1,-1,-1,-1,-1,+1,+1,+1,-1,+1 }	new long[] { -1,+1 }
A049184	parm3	0	A049150	new long[] { [+1,-1,-1,-1,+1,+1,+1,+1,-1,+1 }	new long[] { -1,+1 }
A049185	parm3	0	A049150	new long[] { [+1,-1,-1,+1,-1,-1,+1,+1,-1,+1 }	new long[] { -1,+1 }
A049186	parm3	0	A049150	new long[] { [+1,-1,-1,-1,-1,-1,+1,+1,-1,+1 }	new long[] { -1,+1 }
A049187	parm3	0	A049150	new long[] { [+1,-1,+1,-1,-1,-1,+1,+1,-1,+1 }	new long[] { -1,+1 }
A049188	parm3	0	A049150	new long[] { [+1,-1,-1,+1,+1,-1,+1,+1,-1,+1 }	new long[] { -1,+1 }
A049189	parm3	0	A049150	new long[] { [+1,-1,-1,-1,+1,-1,+1,+1,-1,+1 }	new long[] { -1,+1 }

