#!perl

# Determine DirectTransforms
# @(#) $Id$
# 2024-02-02, Georg Fischer
#
#:# Usage:
#:#   perl dirtraf.pl [-f directfile] input.seq4 > output.seq4
#--------------------------------------------------------
use strict;
use integer;
use warnings;
my ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime (time);
my $timestamp = sprintf ("%04d-%02d-%02d %02d:%02d", $year + 1900, $mon + 1, $mday, $hour, $min);
my $progname = $0;
print "# Generated by OEIS-mat/robot/$progname at $timestamp\n";

my $dirfile = "direct.txt";

my $debug = 0;
if (0 && scalar(@ARGV) == 0) {
    print `grep -E "^#:#" $0 | cut -b3-`;
    exit;
}
while (scalar(@ARGV) > 0 and ($ARGV[0] =~ m{\A[\-\+]})) {
    my $opt = shift(@ARGV);
    if (0) {
    } elsif ($opt  =~ m{d}) {
        $debug     = shift(@ARGV);
    } elsif ($opt  =~ m{f}) {
        $dirfile   = shift(@ARGV);
    } else {
        die "invalid option \"$opt\"\n";
    }
} # while $opt

my %dirs = ();
my $count = 0;
open(DIR, "<", $dirfile) || die "** cannot read \"$dirfile\"\n";
while (<DIR>) {
    my $dirl = $_;
    #                1 as 1  2 ofs1 2
    if ($dirl =~ m{\A(A\d+)\t(\-?\d+)}) {
        $dirs{$1} = $2;
        $count ++;
    }
} # while <DIR>
close(DIR);
print STDERR "# $count DirectSequences read\n";

while (<>) {
    next if ! m{\AA\d\d+};
    s{\s+\Z}{}; # chompr
    my ($aseqno, $callcode, $offset, $nest, @rest) = split(/\t/);
    $callcode = "dirtraf";
    my $parm3 = "";
    my $parm4 = "";
    #              1    1  2    2       3  3
    if ($nest =~ m{(A\d+)\((A\d+)\(n\)\)(.*)}) {
        my ($dseqno, $rseqno, $expr) = ($1, $2, $3);
        $expr =~ s{ }{}g;
        if (length($expr) > 0) {
            if(0) {
            } elsif ($expr =~ m{\A([\+\-\*\/])(\d+|n)}) {
                $parm3 = "(n, v) -> v.$1($2)";
                $callcode = "dirtral";
                $parm3 = "";
            }
        }
        my $seq4 = join("\t", $aseqno, $callcode, 0, "new $dseqno()", "new $rseqno()", $parm3, $parm4, $nest, @rest) ."\n";
        if (0) {
        } elsif (defined( $dirs{$dseqno})) {
            my $offset1 = $dirs{$dseqno};
            print        $seq4;
        } else {
            print STDERR $seq4;
        }
    } # foreach
} # foreach $line
#--------------------------------------------
__DATA__
A357974 cut     0       A277116(A055643(n)) + 6*(4 - ceiling(log10(A0556
A358750 cuteqs  0       A121262(A349905(n))
A358750 cuteqs  0       A353494(A003961(n))
A358770 cut     0       A000035(A007913(n)) * A010051(A007913(n))
A359421 cuteqs  0       A000688(A084920(n))
A359599 cuteqs  0       A358777(A359598(n))
A359840 cuteqs  0       A007090(A235474(n))
A359840 cuteqs  0       A007091(A235615(n))
A359950 cuteqs  0       A006530(A036679(n))