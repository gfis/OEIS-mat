#!perl

# Extract source sequences
# @(#) $Id$
# 2024-04-19, Georg Fischer
#
#:# Usage:
#:#   perl rseqnos.pl input.cat25 > output.seq4
#--------------------------------------------------------
use strict;
use integer;
use warnings;
my ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime (time);
my $timestamp = sprintf ("%04d-%02d-%02d %02d:%02d", $year + 1900, $mon + 1, $mday, $hour, $min);
my $progname = $0;
print "# Generated by $progname at $timestamp\n";

if (0 && scalar(@ARGV) == 0) {
    print `grep -E "^#:#" $0 | cut -b3-`;
    exit;
}
my $debug    = 0;
my $callcode = "invtraf";
while (scalar(@ARGV) > 0 and ($ARGV[0] =~ m{\A[\-\+]})) {
    my $opt = shift(@ARGV);
    if (0) {
    } elsif ($opt  =~ m{d}) {
        $debug     = shift(@ARGV);
    } elsif ($opt  =~ m{cc}) {
        $callcode  = shift(@ARGV);
    } else {
        die "invalid option \"$opt\"\n";
    }
} # while $opt

while (<>) {
    s/\s+\Z//; # chompr
    my $line = $_;
    print "# $line\n" if $debug >= 2;
    if ($line =~ m{\A.([NFC]) (A\d+) *(.*)}) {
        my ($type, $aseqno, $rest) = ($1, $2, $3);
        if ($rest =~ m{\b(A\d+)}) {
            my $rseqno = $1;
            print        join("\t", $aseqno, $callcode, 0, "new $rseqno()", $rest) . "\n";
        } else {
            my $rseqno = $1;
            print STDERR join("\t", $aseqno, $callcode, 0, "new $rseqno()", $rest) . "\n";
        }
    }
} # while <>
#--------------------------------------------
__DATA__
%N A325975 a(n) = gcd(A325977(n), A325978(n)).
%F A325975 a(n) = gcd(A325977(n), A325978(n)).
