#!perl

# Parse general expressions in output of gex_oeis.pl
# @(#) $Id$
# 2024-05-30, Georg Fischer: copied from gex_oeis.pl
#
#:# Usage:
#:#   perl gex.oeis.pl ... \
#:#   | perl gex_parse.pl > seq4-format 2> rest
#--------------------------------------------------------
use strict;
use integer;
use warnings;
my ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime (time);
my $timestamp = sprintf ("%04d-%02d-%02d %02d:%02d", $year + 1900, $mon + 1, $mday, $hour, $min);
my $pwd = `pwd`;
$pwd =~ m{(/OEIS\-mat\S*)};
print "# Generated by ..$1/$0 at $timestamp\n";
my $debug = 0;
if (0 && scalar(@ARGV) == 0) {
    print `grep -E "^#:#" $0 | cut -b3-`;
    exit;
}
while (scalar(@ARGV) > 0 and ($ARGV[0] =~ m{\A[\-\+]})) {
    my $opt = shift(@ARGV);
    if (0) {
    } elsif ($opt  =~ m{d}) {
        $debug     = shift(@ARGV);
    } else {
        die "invalid option \"$opt\"\n";
    }
} # while $opt

my ($line, $aseqno, $callcode, $offset1, $name, $orig_name, $expr, $var, $lo, $hi, $n, $d);
# while (<DATA>) {
while (<>) {
    next if !m{\AA\d+}; # must start with A-number
    $line = $_;
    $line =~ s/\s+\Z//; # chompr
    my $nok = 0;
    ($aseqno, $callcode, $offset1, $name, $orig_name) = split(/\t/, $line);
    if ($debug >= 2) {
        print "# aseqno=$aseqno, name=$name, $orig_name\n";
    }
    $orig_name = $name;

    my @list = ();
    my $ilist = 0; # next index for list elements
    my $list_len = scalar(@list) - 1;
    my $source; # text to be replaced
    my $target; # replacement text
    my $loop_check = 64;
    while (--$loop_check >= 0 && $list_len < scalar(@list)) { # at the start, or something has still been added
        if ($debug >= 1) { print "#   name=$name, ilist=$ilist, list=" . join(";", @list) . "\n"; }
        $list_len = scalar(@list);
        if (0) {
        #                   12           2  3   3  1
        } elsif ($name =~ m{(([ADFK]\d{6})\((\w+)\))}) {
            $source = $1;
            my $ano = $2;
            my $index = $3;
            if ($index =~ m{[i-n]|_i\d+}) {
                $target = "_z$ilist";
                push(@list, "$target=$source"); $ilist = scalar(@list); 
                $name =~ s{$ano\($index\)}{$target}g;
            }
        }
    } # main substitution loop
    if ($loop_check <= 0) {
        $nok = "1loop";
    }
    if ($name =~ m{\A_z\d+\Z}) { # all substituted
    } else { # some unparsed rest remained
        $nok = "2npar";
    }

    if ($nok eq "0") {
        print        join("\t", $aseqno, "lambda", 0, "$name", join(";", @list), "\\\\", $orig_name) . "\n";
    } else {
        print STDERR join("\t", $aseqno, "$nok"  , 0, "$name", join(";", @list), "\\\\", $orig_name) . "\n";
    }
} # while <>
#--------------------------------------------
__DATA__
A364980	lambda	0	a(n) = n! * Sum_{k=0..n} k^(n-k) * binomial(2*n-k+1,k)/( (2*n-k+1)*(n-k)! ).
A364981	lambda	0	a(n) = n! * Sum_{k=0..n} k^(n-k) * binomial(3*n-2*k+1,k)/( (3*n-2*k+1)*(n-k)! ).
A364982	lambda	0	a(n) = (n!/(2*n+1)) * Sum_{k=0..n} k^(n-k) * binomial(2*n+1,k)/(n-k)!.
A364983	lambda	0	a(n) = n! * Sum_{k=0..n} k^(n-k) * binomial(3*k+1,k)/( (3*k+1)*(n-k)! ) = n! * Sum_{k=0..n} k^(n-k) * A001764(k)/(n-k)!.
A364984	lambda	0	a(n) = n! * Sum_{k=0..n} k^(n-k) * binomial(n+2*k+1,k)/( (n+2*k+1)*(n-k)! ).