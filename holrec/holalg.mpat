#!Maple
# Convert an algebraic equation into a matrix for HolonomicRecurrence
# 2022-12-01, Georg Fischer
with(FormalPowerSeries): # requires Maple 2022
with(LREtools): with(StringTools):
toString:= proc(expr) DeleteSpace(convert(expr, string)) end:
C:= proc(x) (1 - sqrt(1 - 4*x)) / (2*x) end: # A000108 Catalan's g.f.
Catlan:= proc(x) (1 - sqrt(1 - 4*x)) / (2*x) end:
holalg:= proc(aseqno, cc, x, alg, inits) local req1, reqm, ope1, opea, ord1, ordm, orda, offset, dist, ins1, i, j, u, matstr, inistr;
  try
    offset:= 0:
    dist:= 0:
    req1:= diffeqtorec(AlgtoHolonomicDE(alg,A(x)),A(x),u(n));
    ord1:= nops(req1);
    ins1:= seq(u(i-1)=inits[i], i=1..ord1);
    reqm:= MinimalRecurrence(req1, u(n), {ins1})[1];
    i:= 0; do i:= i + 1 until not has(reqm, u(n+i+1)):
    reqm:= subs(n=n-i, reqm);
    if coeff(coeff(op(1, reqm), u(n)), n, degree(coeff(op(1, reqm), u(n)))) >= 0 then reqm:= -reqm fi:
    _Env_LRE_tau:= A ;_Env_LRE_x:= n; ope1:= RecurrenceToOperator(reqm, u(n));
    orda:= degree(ope1, A);
    opea:= subs(n=n-orda, ope1);
    seq(coeff(opea, A, i), i=orda..0, -1);
    matstr:= toString([[0], seq([if coeff(opea, A, i) = 0 then 0 else seq(coeff(coeff(opea, A, i), n, j), j=0..degree(coeff(opea, A, i), n)) fi], i=0..orda)]);
    j := 0; do j:= j + 1 until (j >= nops(inits)-1 or inits[j] <> 0):
    inistr:= toString([seq(inits[i], i=1..orda + j)]);
    printf("%a\t%a\t%a\t%s\t%s\t%a\t%a\t%a\n", aseqno, cc, offset, matstr, inistr, dist, reqm, ogf);
    printf("make runholo A=%a OFF=%a MATRIX=\"%s\" INIT=\"%s\" DIST=%a\n", aseqno, offset, matstr, inistr, dist);
  catch:
    printf("# %a failed: %q\n", aseqno, lastexception):
    error
  end try
end;
# trace(holalg);
# A352413 G.f. A(x) satisfies: A(x)^4 = (1-x) * (A(x) + x)^3.
# holalg(A352413, holalg, x, -A^4+(1-x)*(A+x)^3,[1,2,-6,22,-115,675,-4268,28328,-194664,1372984,-9882190,72293094,-535946436,4017628380,-30402186474]);

timelimit($(TIMEOUT), holalg($(PARM0), $(PARM1), $(PARM2), $(PARM3), [$(PARM4)]));

